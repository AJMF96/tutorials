name: CI

on:
  push:
    branches: [ main ]
    
  workflow_dispatch:
jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout playbooks
        uses: actions/checkout@v2
        with:
          repository: devonfw-tutorials/tutorials
          path: playbooks
      - name: Setup matrix combinations
        id: setup-matrix-combinations
        run: |
          for dir in playbooks/*/; do MATRIX_PARAMS_COMBINATIONS=$MATRIX_PARAMS_COMBINATIONS'{"tutorial": "'$dir'"},'; done
          echo ::set-output name=matrix-combinations::{\"include\":[$MATRIX_PARAMS_COMBINATIONS]}
    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}
      
  build_main:
    runs-on: ubuntu-latest
    needs: setup-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
    steps:
      - name: Checkout tutorial-compiler
        uses: actions/checkout@v2
        with:
          repository: devonfw-tutorials/tutorial-compiler
      
      - name: Checkout playbooks
        uses: actions/checkout@v2
        with:
          repository: devonfw-tutorials/tutorials
          path: playbooks
      
      - uses: actions/setup-node@v2-beta
      
      - name: install TS
        run: npm install typescript
      
      - name: npm install
        run: npm install

      - name: run buildRun.sh 
        run: sh buildRun.sh -p ${{ matrix.tutorial }}
      
      - name: Repository dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: devonfw-tutorials/katacoda-scenarios
          event-type: dispatch-katacoda-scenarios
