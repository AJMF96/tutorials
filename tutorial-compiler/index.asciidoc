= Create a tutorial with the Tutorial-Compiler
==== 
In this scenario you will learn how to create your own tutorial with the Tutorial-Compiler.

You will learn how to set up the environment and you will get introduced in the syntax for writing own tutorial.

Requirements: 
 * GitHub account

You can find the documentation here:

https://github.com/devonfw-forge/tutorial-compiler/wiki
====

====
# Setup your workspace
Let's start!

First of all, go to the tutorials repository on GitHub:

https://github.com/devonfw-tutorials/tutorials

Fork the repository by clicking on the 'Fork' button.
This will create a copy of the repository in your own GitHub account. You will find it in 'Your repositories'.

[step]
--
nextKatacodaStep("Fork the tutorials repository", [{"image": "images/fork.jpg"}, {"content": "\nOpen the forked repository in your GitHub account and copy the repository URL as shown in image below.\n"}, {"image": "images/clone_code.jpg"}])
--
====


Paste the URL to the 'git clone' command to clone the repostitory. For this tutorial we will use clone the original tutorial-compiler repository of the 'devonfw-tutorials' GitHub account. Therefore we are able to write the asciidoc-files and generate the tutorials, but we can not push changes in the source code to it.
[step]
== Clone the repository
--
cloneRepository("", "https://github.com/devonfw-tutorials/tutorial-compiler.git")
--

====
[step]
--
nextKatacodaStep("Create a new branch", [{ "file": "files/createNewBranch.md" }])
--
Now you can start to create the tutorial. This will be shown in the next steps.
====

# Create the tutorial

Each tutorial is located in its own directory and consists of an asciidoc file, in which the tutorial is specified. The file is always named 'index.asciidoc'.

So create a new folder in inside the tutorials directory and the file for the tutorial.
[step]
--
createFile("tutorials/myTutorial/index.asciidoc")
--

[step]
--
nextKatacodaStep("Create a pull request", [{ "file": "files/createPullRequest.md" }])
--

It's time to add some content to the tutorial. You can find the syntax are tutorial is written in on https://github.com/devonfw-tutorials/tutorials/wiki/Development.

At first we will add a title to the first line of the file.
[step]
--
changeFile("tutorials/myTutorial/index.asciidoc", {"content": "= Title of my new tutorial"})
--

The next step is to add some description lines below the title. The description has to be surrounded by `====`.
[step]
--
changeFile("tutorials/myTutorial/index.asciidoc", {"file": "files/description.txt", "placeholder": "= Title of my new tutorial" })
--

Last but not least add a step. A step consists of an explanation, a function to execute and an optional explanation of the result of the step. You can find a list with the currently available function on https://github.com/devonfw-tutorials/tutorial-compiler/wiki/Functions.

In this tutorial we will add a simple step which creates a new file.
[step]
--
changeFile("tutorials/myTutorial/index.asciidoc", {"file": "files/step.txt" })
--

[step]
--
nextKatacodaStep("Alternative syntax", [{ "file": "files/alternativeSyntax.md" }])
--

[step]
--
nextKatacodaStep("Push tutorial", [{ "file": "files/pushTutorial.md" }])
--
